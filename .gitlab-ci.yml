variables:
  MAVEN_REPO_LOCAL_PATH: ".m2/repository"
  MAVEN_OPTS: "-Dmaven.repo.local=$MAVEN_REPO_LOCAL_PATH"
  MAVEN_CLI_OPTS: "-s .mvn/settings.xml --batch-mode --errors --fail-at-end --show-version"
  DOCKER_IMAGE_NAME: "$CI_PROJECT_NAME"

stages:
  - build     # compile, unit-tests, integration-tests, package
  - analyze   # run sonarqube analysis
  - push      # build docker image and push image to artifactory

maven-build:
  stage: build
  image: openjdk:8-jdk-alpine
  cache:
    key: $CI_PROJECT_PATH
    paths:
      - $MAVEN_REPO_LOCAL_PATH
  artifacts:
    expire_in: 1 day
    paths:
      - target/*
  script: "./mvnw $MAVEN_CLI_OPTS clean org.jacoco:jacoco-maven-plugin:prepare-agent verify"


sonarqube:
  stage: analyze
  image: openjdk:8-jdk-alpine
  cache:
    key: $CI_PROJECT_PATH
    paths:
      - $MAVEN_REPO_LOCAL_PATH
  script:
    - if [ "$CI_COMMIT_REF_NAME" == "master" ]; then SONAR_BRANCH_NAME=""; else SONAR_BRANCH_NAME="-Dsonar.branch.name=$CI_COMMIT_REF_NAME"; fi
    - "./mvnw $MAVEN_CLI_OPTS $SONAR_MAVEN_GOAL $SONAR_BRANCH_NAME -Dsonar.host.url=$SONAR_URL -Dsonar.login=$SONAR_TOKEN"

################################################################################
# PUSH

docker-build:
  stage: push
  image: docker:latest
  script:
    - docker login -u "$DOCKER_REGISTRY_USER" -p "$DOCKER_REGISTRY_PASS" $DOCKER_REGISTRY_URL
    - docker build --pull -t "$DOCKER_REGISTRY_URL/$DOCKER_REGISTRY_REPO/$DOCKER_IMAGE_NAME" .
    - docker push "$DOCKER_REGISTRY_URL/$DOCKER_REGISTRY_REPO/$DOCKER_IMAGE_NAME"